@startuml
'https://plantuml.com/class-diagram

class User
class Card
class CardGenerator
class Trade
class Pack
class Deck
class Store
class Battle
class Gamelogic
class Postgres
enum cardType
enum elementType


class User {
    - username: String
    - password: String
    - ELO: int
    - coins: int
    - stack: ArrayList<Card>
    - deck: Deck[]

    + getDeckCards()
    + getStackCards()
    + viewDeck()
    + deckReselection()
    + deleteDeck()
    + addCardsToStack()
    + addCardsToDeck()
    + checkStack()
    + checkDeck()
    + viewStack()
}


abstract class Card {
    - name: String
    - damage: int
    - cardType: enum
    - elementType: enum

    + getCardInfo()
}


enum elementType {
    FIRE,
    WATER,
    NORMAL
}


enum cardType {
    MONSTER,
    SPELL
}


class CardGenerator {
    - cards: Card[]

    + shuffleCards()
}


class Trade {
    - tradeData: ArrayList<String>
}


class Pack {
    - packageCards: Card[]
    - price: int

    + setPackageCards()
}


class Deck {
    - deckCards: Card[]

    + checkDeck()
    + printDeck()
    + initializeDeck()
    + addCardToDeck()
    + cleanDeck()
}


class Store {
    - trades: Trade[]

    + requestTrade()
    + acceptTrade()
}


class Battle {
    - user1: User
    - user2: User
    - deck1: Card[]
    - deck2 Card[]
    - battleLog: ArrayList<String>

    + fight()
    + compareCards()
    + checkEffectiveness()
    + updateBattleLog()
    + checkIfDeckEmpty()
    + transferCardToWinner()
    + transferCardFromLoser()
    + cardTransferInDb()
    + updateScoreboard()
}


class Gamelogic {
    - user: User

    + userLogin()
    + userRegistration()
    + returnUser()
    + gameMenu()
    + editProfile()
    + startScreen()
    + viewScore()
    + marketplace()
    + closeGame()
    + fightPreparation()
    + startFight()
    + battleOverScreen()
}


class Postgres {
    conn: Connection
    - salt: String

    + checkIfUserExists()
    + registerUser()
    + loginUser()
    + fetchUserData()
    + logoutUser()
    + addUserToScoreboard()
    + getAllCards()
    + checkBalance()
    + buyPackage()
    + getUserId()
    + insertNewCards()
    + getCardById()
    + initializeStack()
    + initializeDeck()
    + removeOldDeck()
    + getSelectedCards()
    + selectDeck()
    + getOpponents()
    + transferCard()
    + payBattlePenalty()
    + getScoreboard()
    + updateScoreboard()
}


Gamelogic -- User
Gamelogic -- Store
Gamelogic -- Battle
Gamelogic -- Card
Gamelogic -- Pack
User -- Deck
Store -- Trade
Pack -- CardGenerator
Battle -- User
Gamelogic -- Postgres
Battle -- Postgres
Card -- elementType
Card -- cardType


@enduml